<?xml version="1.0" encoding="UTF-8"?>
<project name="rsaworkers" default="dist" basedir=".">
	<description>Build file for the rsa distributed workers</description>

	<!-- Project directories, referenced below -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="doc" location="doc" />
	<property name="inc" location="lib" />
	<property name="config" location="config" />
	<property name="bin" location="bin" />
	<property name="resources" location="resources" />
	<property name="script" location="script" />

	<!--  Application definitions -->
	<property name="app.name" value="rsaworkers" />
	<property name="app.path" value="/rsaworkers" />
	<!-- Versions numbers are populated by master build file; see ../build.xml. -->
	<property name="version.number" value="local" />
	<property name="svn.info.lastRev" value="rN"/>
	<property name="storagemanager.app.name" value="storagemanager" />
	<property name="dist.name" value="${app.name}-${version.number}" />

	<!-- Project Dependencies -->
	<property name="storagemanager" location="../${storagemanager.app.name}" />
	<property name="storagemanagerSrc" location="../storagemanager/src" />
	<property name="storagemanagerConfig" location="../storagemanager/config" />
	<property name="storagemanagerDist" location="../storagemanager/dist" />
	<property name="storagemanagerInc" location="../storagemanager/lib" />
	<property name="storagemanagerAntFile" location="${storagemanager}/build.xml" />
	<property name="storagemanagerResources" location="../storagemanager/resources" />
	<property name="rsaquerySrc" location="../rsaquery/src" />
	<property name="rsaqueryFilterSrc" location="../rsaquery/filter-src" />

	<!-- Make sure gdal library location is correct for production -->
	<condition property="gdalLib" value="C:\tmp\gdalapps\bin">
		<os family="windows" />
	</condition>
	<condition property="gdalLib" value="/usr/share/java">
		<os family="unix" />
	</condition>
	<property name="target" value="1.7" />
	<property name="source" value="1.7" />

	<path id="classpath">
		<fileset dir="lib/">
			<include name="*.jar" />
		</fileset>
		<fileset dir="rsaquery-lib/">
			<include name="*.jar" />
		</fileset>
		<fileset dir="storagemanager-lib//">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${gdalLib}/gdal.jar" />
	</path>

	<path id="storageManager-classpath">
		<fileset dir="${storagemanagerInc}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!-- Initialisation -->
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${dist}" />
		<mkdir dir="${doc}" />
	</target>

	<!-- Clean up temporary build directories -->
	<target name="clean">
		<delete dir="${build}" quiet="true" />
		<delete dir="${dist}" quiet="true" />
		<delete dir="${doc}" quiet="true" />
	</target>

	<!-- Copies dependencies from SpatialCubeService (html, js code) 
	     and the storagemanager (lots of jar files) -->
	<target name="copy-resources">
		<copy todir="${build}/resources">
			<!-- Non-configuration resources -->
			<fileset dir="${storagemanagerResources}">
				<include name="**/*.xml" />
			</fileset>
			<fileset dir="${resources}">
				<include name="**/*.xml" />
				<include name="**/*.conf" />
			</fileset>
		</copy>

		<!-- copy config. Because this combines the contents of several
		     directories, the readme files are concatenated. Also, .SAMPLE files
		     are renamed. Due to the way the globbing works, we need multiple
		     copy tasks here. -->
		<!-- NOTE! These rules are a bit touchy, and it's easy to miss something.
		     If you need to change this, verify that the resulting archive
		     varies from the old one in the way you intended by examining its
		     contents. You might also like to apply the same changes to
		     ../cmdclient/build.xml. -->
		<copy todir="${build}" flatten="false" verbose="true" overwrite="true">
			<fileset dir="${storagemanagerConfig}">
				<exclude name="*.SAMPLE"/>
			</fileset>
		</copy>
		<copy todir="${build}" flatten="false" verbose="true" overwrite="true">
			<fileset dir="${storagemanagerConfig}" />
			<globmapper from="*.SAMPLE" to="*"/>
		</copy>
	</target>

	<!-- Compile the java code -->
	<target name="compile" depends="init" description="compile the source">
		<mkdir dir="${build}" />
		<echo message="Java home = ${java.home}" />
		<javac destdir="${build}" source="${source}" target="${target}" debug="on" debuglevel="lines,vars,source">
			<classpath refid="classpath" />
			<src path="${src}" />
			<!-- Include dependencies. These don't compile to intermediate jar files
			     that can be added to the classpath. -->
			<src path="${storagemanagerSrc}" />
			<src path="${rsaquerySrc}" />
			<src path="${rsaqueryFilterSrc}" />
		</javac>
	</target>

	<!-- Create javadoc for the SpatialCubeService project -->
	<target name="javadoc">
		<javadoc access="public" author="true" classpathref="classpath" destdir="${doc}" doctitle="SpatialCubeService Documentation" nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" source="${source}" sourcepath="${src};${storagemanagerSrc};${rsaquerySrc};${rsaqueryFilterSrc}" splitindex="true" use="true" version="true" />

		<!-- Zip javadocs into a zipped file -->
		<zip destfile="${dist}/${app.name}-JAVADOC.zip" basedir="${doc}" update="false" whenempty="fail" compress="true" />

		<!-- Create javadoc for the storagemanager project -->
		<ant antfile="${storagemanagerAntFile}" target="javadoc" dir="${storagemanager}" inheritall="false" />

		<!-- Copies API for SpatialCubeService -->
		<copy file="${storagemanager}/dist/${storagemanager.app.name}-JAVADOC.zip" toDir="${dist}" />
	</target>

	<!-- Create souce code compilation for the SpatialCubeService project -->
	<target name="source">
		<!-- Zip source into a zipped file -->
		<zip destfile="${dist}/${app.name}_SOURCE.zip" basedir="${src}" />

		<!-- Zip source into a zipped file -->
		<ant antfile="${storagemanagerAntFile}" target="source" dir="${storagemanager}" inheritall="false" />

		<!-- Copies source for SpatialCubeService -->
		<copy file="${storagemanager}/dist/${storagemanager.app.name}_SOURCE.zip" toDir="${dist}" />
	</target>

	<target name="dist" depends="clean,copy-resources,compile,source"
			description="generate the distribution">

		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/${dist.name}/lib" />
		<mkdir dir="${dist}/${dist.name}/resources" />

		<copy todir="${dist}/${dist.name}/lib" flatten="true" verbose="true">
			<path refid="classpath" />
		</copy>

		<copy todir="${dist}/${dist.name}/resources" flatten="false" verbose="true">
			<fileset dir="${resources}">
				<include name="**/*.xml" />
				<include name="**/*.conf" />
			</fileset>
		</copy>

		<!-- copy script into the distribution-->
		<copy todir="${dist}/${dist.name}" flatten="true" verbose="true">
			<fileset dir="${script}">
				<exclude name="**/*~" />
			</fileset>
		</copy>

		<!-- Allow easy execution on Unix -->
		<chmod file="${dist}/${dist.name}/rsaworker" perm="ugo+x"/>
		<symlink link="${dist}/${app.name}" resource="${dist.name}" overwrite="true" />

		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/${dist.name}/${dist.name}.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="org.vpac.worker.Main" />
				<attribute name="Class-Path" value="${lib.list}"/>
			</manifest>
		</jar>

		<!-- Zip distribution into a zipped file -->
		<zip destfile="${dist}/${dist.name}.zip" whenempty="fail">
			<!-- Some fancy stuff to make sure the script is executable. -->
			<zipfileset dir="${dist}" includes="${dist.name}/**/*" excludes="${dist.name}/rsaworkers" />
			<zipfileset dir="${dist}" includes="${dist.name}/rsaworkers" filemode="755" />
		</zip>
	</target>
</project>

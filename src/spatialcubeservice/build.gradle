buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.4'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'

dependencies {
    ext.tomcatVersion = '7.0.69'

    providedCompile (
        'javax.servlet:javax.servlet-api:3.1.0',
    )

    compile (
        'com.fasterxml.jackson.core:jackson-databind:2.7.4',
        'com.googlecode.lambdaj:lambdaj:2.3.3',
        'com.sun.xml.bind:jaxb-impl:2.2',
        'com.rometools:rome:1.6.0',
        'com.typesafe.akka:akka-actor_2.11:2.4.2',
        'com.typesafe.akka:akka-cluster_2.11:2.4.2',
        'com.typesafe.akka:akka-cluster-tools_2.11:2.4.2',
        'commons-io:commons-io:1.3.2',
        'commons-net:commons-net:3.4',
        'javax.validation:validation-api:1.1.0.Final',
        'org.hibernate:hibernate-validator:5.2.4.Final',
        "org.springframework:spring-webmvc:$springVersion",
        project(':rsaquery'),
        project(':rsaquery').sourceSets.filter.output,
        project(':storagemanager'),
        project(':rsa-common'),
    )

    // Some of these runtime dependencies only get used when rendering certain
    // content types. So when upgrading them, make sure you test all supported
    // response types e.g:
    // - /rsa/Dataset.xml
    // - /rsa/Dataset.json
    // - /rsa/Dataset.rss
    // - /rsa/Dataset.atom
    runtime (
        'commons-fileupload:commons-fileupload:1.2',
        'jstl:jstl:1.2',
        'org.apache.taglibs:taglibs-standard-impl:1.2.5',
        "org.springframework:spring-oxm:$springVersion",
    )

    tomcat (
        "org.apache.tomcat.embed:tomcat-embed-core:$tomcatVersion",
        "org.apache.tomcat.embed:tomcat-embed-logging-juli:$tomcatVersion",
        "org.apache.tomcat.embed:tomcat-embed-jasper:$tomcatVersion",
    )

    testCompile (
        'com.carrotsearch:junit-benchmarks:0.4.0',
        "org.springframework:spring-test:$springVersion",
        sourceSets.main.output,
    )
}

tasks.withType(Test) {
    // Only run one test at a time, because many tests use the same datasets
    maxParallelForks = 1
}

jar {
    manifest {
        attributes("Implementation-Title": "spatialcubeservice")
    }
}

war {
    baseName = 'rsa'
}
